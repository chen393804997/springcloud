<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>hello-service-1114</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>hello-service-1114</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <spring-cloud.version>Hoxton.RC2</spring-cloud.version>
        <chartset.UTF8>UTF-8</chartset.UTF8>
        <maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.7</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
    <profiles>
        <profile>
            <id>dev</id>
            <activation><activeByDefault>true</activeByDefault></activation>
            <properties>
                <isTest>true</isTest>
                <logLevel>INFO</logLevel>
                <eureka.client.serviceUrl.defaultZone>http://localhost:1111/eureka/,http://localhost:1112/eureka/</eureka.client.serviceUrl.defaultZone>
                <logger.base>/home/xdnphb/run/data/logs/</logger.base>
                <fileRoot>/home/run/data/</fileRoot>
                <logRoot>/home/run/data/logs</logRoot>
                <hostname>localhost</hostname>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <properties>
                <eureka.client.serviceUrl.defaultZone>http://localhost:1111/eureka/,http://localhost:1112/eureka/</eureka.client.serviceUrl.defaultZone>
                <logLevel>INFO</logLevel>
                <logger.base>/home/xdnphb/run/data/logs/</logger.base>
                <fileRoot>/home/run/data/</fileRoot>
                <logRoot>/home/run/data/logs</logRoot>
                <hostname>localhost</hostname>
            </properties>
        </profile>
        <profile>
            <id>aliyunproduct</id>
            <properties>
                <logLevel>INFO</logLevel>
                <eureka.client.serviceUrl.defaultZone>http://localhost:1111/eureka/,http://localhost:1112/eureka/</eureka.client.serviceUrl.defaultZone>
                <logger.base>/home/xdnphb/run/data/logs/</logger.base>
                <fileRoot>/home/run/data/</fileRoot>
                <logRoot>/home/run/data/logs</logRoot>
                <hostname>localhost</hostname>

            </properties>
        </profile>
    </profiles>
    <build>
        <resources><!-- 使用@@站位符，输出Dockerfile至docker文件夹 -->
            <resource>
                <directory>src/main/docker</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/Dockerfile</include>
                    <include>**/cert/**</include>
                </includes>
                <targetPath>../docker</targetPath>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*.yml</include>
                    <include>*.xml</include>
                    <include>*.properties</include>
                    <include>**/*.yml</include>
                    <include>**/*.properties</include>
                    <include>**/*.ttf</include>
                    <include>**/*.xml</include>
                    <include>**/application*.yaml</include>
                    <include>**/*.sql</include>
                    <include>**/*.pem</include>
                    <include>**/*.p12</include>
                    <include>**/*.txt</include>
                    <include>**/*.png</include>
                    <include>**/*.ini</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <encoding>${chartset.UTF8}</encoding>
                    <charset>${chartset.UTF8}</charset>
                    <docencoding>${chartset.UTF8}</docencoding>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <!-- 过滤后缀为pem、pfx、p12的证书文件 -->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                        <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <checkModificationExcludes>
                            <checkModificationExclude>**/.classpath</checkModificationExclude>
                            <checkModificationExclude>**/.project</checkModificationExclude>
                        </checkModificationExcludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
